# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  lib,
  modulesPath,
  ...
}: {
  imports = [
    (modulesPath + "/profiles/qemu-guest.nix")
  ];

  boot.loader.grub.enable = true;
  boot.loader.grub.device = "/dev/vda";
  boot.loader.grub.useOSProber = true;

  boot.initrd.availableKernelModules = ["ahci" "xhci_pci" "virtio_pci" "sr_mod" "virtio_blk"];
  boot.initrd.kernelModules = [];
  boot.kernelModules = ["kvm-amd"];
  boot.extraModulePackages = [];

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/680762a1-2e20-4507-b923-bbe891cdb8d4";
    fsType = "ext4";
  };
  boot.initrd.luks.devices."luks-793d3832-ceb7-4bad-b04c-b246cb599469".device = "/dev/disk/by-uuid/793d3832-ceb7-4bad-b04c-b246cb599469";
  # Setup keyfile
  boot.initrd.secrets = {
    "/boot/crypto_keyfile.bin" = null;
  };

  boot.loader.grub.enableCryptodisk = true;

  boot.initrd.luks.devices."luks-cd485ba8-eea9-4c2f-a5d8-3f0d46092eff".keyFile = "/boot/crypto_keyfile.bin";
  boot.initrd.luks.devices."luks-793d3832-ceb7-4bad-b04c-b246cb599469".keyFile = "/boot/crypto_keyfile.bin";

  boot.initrd.luks.devices."luks-cd485ba8-eea9-4c2f-a5d8-3f0d46092eff".device = "/dev/disk/by-uuid/cd485ba8-eea9-4c2f-a5d8-3f0d46092eff";

  swapDevices = [
    {device = "/dev/disk/by-uuid/074aa96b-a4ba-4eb3-8e10-b6c713f756ed";}
  ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  # networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp1s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
}
